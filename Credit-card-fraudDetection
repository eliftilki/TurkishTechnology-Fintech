import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.preprocessing import StandardScaler, LabelEncoder
from imblearn.over_sampling import SMOTE
import pickle


data = pd.read_csv('/content/drive/MyDrive/fraudTest.csv')


data = data.ffill()


label_encoders = {}
for column in data.select_dtypes(include=['object']).columns:
    le = LabelEncoder()
    data[column] = le.fit_transform(data[column])
    label_encoders[column] = le


X = data.drop('is_fraud', axis=1)
y = data['is_fraud']


scaler = StandardScaler()
X = scaler.fit_transform(X)


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)


smote = SMOTE(random_state=42)
X_train_res, y_train_res = smote.fit_resample(X_train, y_train)


model = LogisticRegression()
model.fit(X_train_res, y_train_res)


y_pred = model.predict(X_test)
print(f"Accuracy: {accuracy_score(y_test, y_pred)}")
print(f"Confusion Matrix:\n {confusion_matrix(y_test, y_pred)}")
print(f"Classification Report:\n {classification_report(y_test, y_pred)}")


with open('fraud_detection_model.pkl', 'wb') as file:
    pickle.dump(model, file)


with open('scaler.pkl', 'wb') as file:
    pickle.dump(scaler, file)


with open('label_encoders.pkl', 'wb') as file:
    pickle.dump(label_encoders, file)
